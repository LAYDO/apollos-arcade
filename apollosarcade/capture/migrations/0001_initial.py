# Generated by Django 5.0.4 on 2024-11-06 22:38

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Game",
            fields=[
                ("game_id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("LOBBY", "LOBBY"),
                            ("REMATCH", "REMATCH"),
                            ("IN-GAME", "IN-GAME"),
                            ("COMPLETED", "COMPLETED"),
                            ("ARCHIVE", "ARCHIVE"),
                            ("ARCHIVED", "ARCHIVED"),
                        ],
                        default="LOBBY",
                        max_length=10,
                    ),
                ),
                (
                    "player_one_object_id",
                    models.PositiveIntegerField(default=None, null=True),
                ),
                (
                    "player_two_object_id",
                    models.PositiveIntegerField(default=None, null=True),
                ),
                (
                    "p1_status",
                    models.CharField(
                        choices=[
                            ("UNREADY", "UNREADY"),
                            ("READY", "READY"),
                            ("IN-GAME", "IN-GAME"),
                            ("LEFT", "LEFT"),
                            ("ABANDONED", "ABANDONED"),
                            ("REMATCH", "REMATCH"),
                        ],
                        default="UNREADY",
                        max_length=10,
                    ),
                ),
                (
                    "p2_status",
                    models.CharField(
                        choices=[
                            ("UNREADY", "UNREADY"),
                            ("READY", "READY"),
                            ("IN-GAME", "IN-GAME"),
                            ("LEFT", "LEFT"),
                            ("ABANDONED", "ABANDONED"),
                            ("REMATCH", "REMATCH"),
                        ],
                        default="UNREADY",
                        max_length=10,
                    ),
                ),
                ("round", models.IntegerField(default=1)),
                ("winner", models.IntegerField(blank=True, default=0)),
                ("loser", models.IntegerField(blank=True, default=0)),
                (
                    "privacy",
                    models.CharField(
                        choices=[("Public", "Public"), ("Private", "Private")],
                        default="Public",
                        max_length=7,
                    ),
                ),
                ("password", models.CharField(default=None, max_length=50, null=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("ended", models.DateTimeField(blank=True, null=True)),
                ("rows", models.IntegerField(default=5)),
                ("cols", models.IntegerField(default=5)),
                ("game_over", models.BooleanField(default=False)),
                ("player1_turn", models.BooleanField(default=True)),
                (
                    "square_arrays",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(
                            base_field=models.IntegerField(), size=5
                        ),
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "player_one_content_type",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="capture_player_one_games",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "player_two_content_type",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="capture_player_two_games",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "db_table": "capture_game",
            },
        ),
    ]
