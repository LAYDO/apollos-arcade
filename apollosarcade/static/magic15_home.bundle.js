/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./static/js/magic15_home.ts":
/*!***********************************!*\
  !*** ./static/js/magic15_home.ts ***!
  \***********************************/
/***/ (function() {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction ft_init() {\n    buildCard();\n    let logo = document.getElementById('toesLogo');\n    if (logo) {\n        drawHomeLogo(logo);\n    }\n}\nfunction buildCard() {\n    let container = document.getElementById('mft_container');\n    if (container) {\n        let card = document.createElement('div');\n        card.classList.add('mft-card');\n        card.id = 'mft_card';\n        let inner = document.createElement('div');\n        inner.classList.add('mft-card-inner');\n        let front = document.createElement('div');\n        front.classList.add('mft-card-front');\n        front.classList.add('mft-col');\n        front.id = 'mft_front';\n        // Create elements for front\n        let svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', '400');\n        svg.setAttribute('height', '267');\n        svg.id = 'toesLogo';\n        front.append(svg);\n        let title = document.createElement('div');\n        title.classList.add('mft-title');\n        title.classList.add('mft-row');\n        title.textContent = 'MAGIC 15';\n        front.append(title);\n        for (let i = 0; i < 3; i++) {\n            let row = document.createElement('div');\n            row.classList.add('mft-row');\n            let button = document.createElement('div');\n            button.classList.add('mft-button');\n            switch (i) {\n                case 0:\n                    button.textContent = 'LOCAL';\n                    button.addEventListener('click', () => {\n                        tictactoe();\n                    });\n                    break;\n                case 1:\n                    button.textContent = 'MULTIPLAYER';\n                    button.addEventListener('click', () => {\n                        checkForMatch();\n                    });\n                    break;\n                case 2:\n                    button.textContent = 'HOW TO PLAY';\n                    button.addEventListener('click', () => {\n                        howToPlay();\n                    });\n                    break;\n                default:\n                    break;\n            }\n            row.append(button);\n            front.append(row);\n        }\n        let back = document.createElement('div');\n        back.classList.add('mft-card-back');\n        back.id = 'mft_back';\n        fetchHowToPlay(back);\n        inner.append(front);\n        inner.append(back);\n        card.append(inner);\n        container.append(card);\n    }\n}\nfunction drawHomeLogo(_element) {\n    let width = _element.clientWidth;\n    let sWidth = width / 3;\n    let start = sWidth / 7;\n    for (let i = 0; i < 3; i++) {\n        let g = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n        for (let j = 0; j < 5; j++) {\n            let line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n            line.setAttribute('stroke', 'var(--font-color)');\n            line.setAttribute('stroke-width', '2.5');\n            if (j != 4) {\n                line.setAttribute('x1', ((j * (sWidth / 4)) + start).toFixed(0));\n                line.setAttribute('x2', ((j * (sWidth / 4)) + start).toFixed(0));\n                line.setAttribute('y1', '3');\n                line.setAttribute('y2', `${sWidth - 3}`);\n            }\n            else {\n                line.setAttribute('x1', (((j - 1) * (sWidth / 4)) + start).toFixed(0));\n                line.setAttribute('x2', (start).toFixed(0));\n                line.setAttribute('y1', '3');\n                line.setAttribute('y2', `${sWidth - 3}`);\n            }\n            g.append(line);\n        }\n        if (i == 1) {\n            g.setAttribute('transform', `translate(0,${sWidth})`);\n        }\n        _element.append(g);\n        start += sWidth;\n    }\n}\nfunction tictactoe() {\n    window.location.pathname = 'magic_fifteen/local/';\n}\nfunction checkForMatch() {\n    let url = `${window.location.origin}${window.location.pathname}check/`;\n    fetch(url).then(response => {\n        // Need a loading function / animation\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n        if (response.redirected && response.url.includes('/accounts/login/')) {\n            alert('User not authenticated, redirecting to login page');\n            window.location.pathname = '/login/';\n            return;\n        }\n        if (response.headers.get('content-type') !== 'application/json') {\n            throw new Error(`Invalid content-type. Expected 'application/json', received '${response.headers.get('content-type')}'.`);\n        }\n        return response.json();\n    }).then(data => {\n        if (data) {\n            window.location.pathname = data.pathname;\n        }\n    }).catch(error => {\n        console.error('There has been a problem with your fetch operation: ', error);\n    });\n}\nfunction howToPlay() {\n    let card = document.getElementById('mft_card');\n    card === null || card === void 0 ? void 0 : card.classList.toggle('clicked');\n}\nfunction fetchHowToPlay(inner) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let url = `${window.location.origin}${window.location.pathname}how-to-play/`;\n        fetch(url).then(response => {\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return response.json();\n        }).then(data => {\n            if (data['title'] == 'Magic 15') {\n                if (inner) {\n                    let title = document.createElement('div');\n                    title.classList.add('mft-title');\n                    title.textContent = data['title'];\n                    inner.append(title);\n                    let text = document.createElement('div');\n                    text.classList.add('mft-text');\n                    text.innerHTML = data['instructions'];\n                    inner.append(text);\n                    // Create the 'X' element\n                    let closeButton = document.createElement('div');\n                    closeButton.classList.add('close-button');\n                    closeButton.textContent = 'X';\n                    closeButton.style.position = 'absolute';\n                    closeButton.style.top = '0';\n                    closeButton.style.right = '0';\n                    closeButton.style.cursor = 'pointer';\n                    closeButton.addEventListener('click', (event) => {\n                        howToPlay();\n                    });\n                    inner.append(closeButton);\n                    // Change inner event listener\n                    inner.removeEventListener('click', () => {\n                        howToPlay();\n                    });\n                }\n            }\n        }).catch(error => {\n            console.error('There has been a problem with your fetch operation: ', error);\n        });\n    });\n}\nft_init();\n\n\n//# sourceURL=webpack:///./static/js/magic15_home.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./static/js/magic15_home.ts"]();
/******/ 	
/******/ })()
;